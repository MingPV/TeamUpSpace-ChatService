// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v6.32.0
// source: proto/room_member/room_member.proto

package room_member

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// RoomMemberServiceClient is the client API for RoomMemberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RoomMemberServiceClient interface {
	CreateRoomMembers(ctx context.Context, in *CreateRoomMembersRequest, opts ...grpc.CallOption) (*CreateRoomMembersResponse, error)
	FindAllByRoomID(ctx context.Context, in *FindAllByRoomIDRequest, opts ...grpc.CallOption) (*FindAllByRoomIDResponse, error)
	FindAllByUserID(ctx context.Context, in *FindAllByUserIDRequest, opts ...grpc.CallOption) (*FindAllByUserIDResponse, error)
	FindByRoomIDAndUserID(ctx context.Context, in *FindByRoomIDAndUserIDRequest, opts ...grpc.CallOption) (*FindByRoomIDAndUserIDResponse, error)
	DeleteByRoomIDAndUserID(ctx context.Context, in *DeleteByRoomIDAndUserIDRequest, opts ...grpc.CallOption) (*DeleteByRoomIDAndUserIDResponse, error)
	DeleteAllByRoomID(ctx context.Context, in *DeleteAllByRoomIDRequest, opts ...grpc.CallOption) (*DeleteAllByRoomIDResponse, error)
}

type roomMemberServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoomMemberServiceClient(cc grpc.ClientConnInterface) RoomMemberServiceClient {
	return &roomMemberServiceClient{cc}
}

func (c *roomMemberServiceClient) CreateRoomMembers(ctx context.Context, in *CreateRoomMembersRequest, opts ...grpc.CallOption) (*CreateRoomMembersResponse, error) {
	out := new(CreateRoomMembersResponse)
	err := c.cc.Invoke(ctx, "/room_member.RoomMemberService/CreateRoomMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomMemberServiceClient) FindAllByRoomID(ctx context.Context, in *FindAllByRoomIDRequest, opts ...grpc.CallOption) (*FindAllByRoomIDResponse, error) {
	out := new(FindAllByRoomIDResponse)
	err := c.cc.Invoke(ctx, "/room_member.RoomMemberService/FindAllByRoomID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomMemberServiceClient) FindAllByUserID(ctx context.Context, in *FindAllByUserIDRequest, opts ...grpc.CallOption) (*FindAllByUserIDResponse, error) {
	out := new(FindAllByUserIDResponse)
	err := c.cc.Invoke(ctx, "/room_member.RoomMemberService/FindAllByUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomMemberServiceClient) FindByRoomIDAndUserID(ctx context.Context, in *FindByRoomIDAndUserIDRequest, opts ...grpc.CallOption) (*FindByRoomIDAndUserIDResponse, error) {
	out := new(FindByRoomIDAndUserIDResponse)
	err := c.cc.Invoke(ctx, "/room_member.RoomMemberService/FindByRoomIDAndUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomMemberServiceClient) DeleteByRoomIDAndUserID(ctx context.Context, in *DeleteByRoomIDAndUserIDRequest, opts ...grpc.CallOption) (*DeleteByRoomIDAndUserIDResponse, error) {
	out := new(DeleteByRoomIDAndUserIDResponse)
	err := c.cc.Invoke(ctx, "/room_member.RoomMemberService/DeleteByRoomIDAndUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomMemberServiceClient) DeleteAllByRoomID(ctx context.Context, in *DeleteAllByRoomIDRequest, opts ...grpc.CallOption) (*DeleteAllByRoomIDResponse, error) {
	out := new(DeleteAllByRoomIDResponse)
	err := c.cc.Invoke(ctx, "/room_member.RoomMemberService/DeleteAllByRoomID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomMemberServiceServer is the server API for RoomMemberService service.
// All implementations must embed UnimplementedRoomMemberServiceServer
// for forward compatibility
type RoomMemberServiceServer interface {
	CreateRoomMembers(context.Context, *CreateRoomMembersRequest) (*CreateRoomMembersResponse, error)
	FindAllByRoomID(context.Context, *FindAllByRoomIDRequest) (*FindAllByRoomIDResponse, error)
	FindAllByUserID(context.Context, *FindAllByUserIDRequest) (*FindAllByUserIDResponse, error)
	FindByRoomIDAndUserID(context.Context, *FindByRoomIDAndUserIDRequest) (*FindByRoomIDAndUserIDResponse, error)
	DeleteByRoomIDAndUserID(context.Context, *DeleteByRoomIDAndUserIDRequest) (*DeleteByRoomIDAndUserIDResponse, error)
	DeleteAllByRoomID(context.Context, *DeleteAllByRoomIDRequest) (*DeleteAllByRoomIDResponse, error)
	mustEmbedUnimplementedRoomMemberServiceServer()
}

// UnimplementedRoomMemberServiceServer must be embedded to have forward compatible implementations.
type UnimplementedRoomMemberServiceServer struct {
}

func (UnimplementedRoomMemberServiceServer) CreateRoomMembers(context.Context, *CreateRoomMembersRequest) (*CreateRoomMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoomMembers not implemented")
}
func (UnimplementedRoomMemberServiceServer) FindAllByRoomID(context.Context, *FindAllByRoomIDRequest) (*FindAllByRoomIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllByRoomID not implemented")
}
func (UnimplementedRoomMemberServiceServer) FindAllByUserID(context.Context, *FindAllByUserIDRequest) (*FindAllByUserIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllByUserID not implemented")
}
func (UnimplementedRoomMemberServiceServer) FindByRoomIDAndUserID(context.Context, *FindByRoomIDAndUserIDRequest) (*FindByRoomIDAndUserIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByRoomIDAndUserID not implemented")
}
func (UnimplementedRoomMemberServiceServer) DeleteByRoomIDAndUserID(context.Context, *DeleteByRoomIDAndUserIDRequest) (*DeleteByRoomIDAndUserIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteByRoomIDAndUserID not implemented")
}
func (UnimplementedRoomMemberServiceServer) DeleteAllByRoomID(context.Context, *DeleteAllByRoomIDRequest) (*DeleteAllByRoomIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllByRoomID not implemented")
}
func (UnimplementedRoomMemberServiceServer) mustEmbedUnimplementedRoomMemberServiceServer() {}

// UnsafeRoomMemberServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RoomMemberServiceServer will
// result in compilation errors.
type UnsafeRoomMemberServiceServer interface {
	mustEmbedUnimplementedRoomMemberServiceServer()
}

func RegisterRoomMemberServiceServer(s grpc.ServiceRegistrar, srv RoomMemberServiceServer) {
	s.RegisterService(&RoomMemberService_ServiceDesc, srv)
}

func _RoomMemberService_CreateRoomMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomMembersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomMemberServiceServer).CreateRoomMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_member.RoomMemberService/CreateRoomMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomMemberServiceServer).CreateRoomMembers(ctx, req.(*CreateRoomMembersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomMemberService_FindAllByRoomID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllByRoomIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomMemberServiceServer).FindAllByRoomID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_member.RoomMemberService/FindAllByRoomID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomMemberServiceServer).FindAllByRoomID(ctx, req.(*FindAllByRoomIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomMemberService_FindAllByUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllByUserIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomMemberServiceServer).FindAllByUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_member.RoomMemberService/FindAllByUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomMemberServiceServer).FindAllByUserID(ctx, req.(*FindAllByUserIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomMemberService_FindByRoomIDAndUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByRoomIDAndUserIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomMemberServiceServer).FindByRoomIDAndUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_member.RoomMemberService/FindByRoomIDAndUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomMemberServiceServer).FindByRoomIDAndUserID(ctx, req.(*FindByRoomIDAndUserIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomMemberService_DeleteByRoomIDAndUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteByRoomIDAndUserIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomMemberServiceServer).DeleteByRoomIDAndUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_member.RoomMemberService/DeleteByRoomIDAndUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomMemberServiceServer).DeleteByRoomIDAndUserID(ctx, req.(*DeleteByRoomIDAndUserIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomMemberService_DeleteAllByRoomID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllByRoomIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomMemberServiceServer).DeleteAllByRoomID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_member.RoomMemberService/DeleteAllByRoomID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomMemberServiceServer).DeleteAllByRoomID(ctx, req.(*DeleteAllByRoomIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RoomMemberService_ServiceDesc is the grpc.ServiceDesc for RoomMemberService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RoomMemberService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "room_member.RoomMemberService",
	HandlerType: (*RoomMemberServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoomMembers",
			Handler:    _RoomMemberService_CreateRoomMembers_Handler,
		},
		{
			MethodName: "FindAllByRoomID",
			Handler:    _RoomMemberService_FindAllByRoomID_Handler,
		},
		{
			MethodName: "FindAllByUserID",
			Handler:    _RoomMemberService_FindAllByUserID_Handler,
		},
		{
			MethodName: "FindByRoomIDAndUserID",
			Handler:    _RoomMemberService_FindByRoomIDAndUserID_Handler,
		},
		{
			MethodName: "DeleteByRoomIDAndUserID",
			Handler:    _RoomMemberService_DeleteByRoomIDAndUserID_Handler,
		},
		{
			MethodName: "DeleteAllByRoomID",
			Handler:    _RoomMemberService_DeleteAllByRoomID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/room_member/room_member.proto",
}
